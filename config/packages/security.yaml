security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }

    # Information to connection user (login)
    # ######################################
        user_provider:
            entity:
                class:    App\Entity\User
                property: email

    # Information to encode password
    # ##############################
    # Password encode
    encoders:
        App\Entity\user: bcrypt

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # Custom Access denied handler
            # ##########################
            access_denied_handler: App\Security\AccessDeniedHandler

            # Login configuration
            # ###################
            # login security firewall
            form_login:
                # route to connect user
                login_path: security_connexion
                # route generated by symfony to check user information
                check_path: security_connexion

            # https://symfony.com/doc/current/security/remember_me.html
            # remember user if checked on login form
            remember_me:
                secret:   '%env(APP_SECRET)%' # %env(APP_SECRET)% or %kernel.secret% ?
                lifetime: 2419200 # 4 weeks in seconds
                path:     /
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true

            # symfony user provider information
            http_basic: ~
            provider: user_provider

            # Logout configuration
            # ####################
            # logout (managed by symfony)
            logout_on_user_change: true
            logout:
                path: security_logout
                target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # ROLES management
    # ################

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # require ROLES for /admin
        - { path: /mon-stock/, roles: [ ROLE_MEMBER ] }
        - { path: /my-stock/, roles: [ ROLE_MEMBER ] }
        - { path: /admin/,   roles: [ ROLE_ADMIN ] }

    role_hierarchy:
        ROLE_EDITOR: ROLE_MEMBER
        # https://symfony.com/doc/current/security/impersonating_user.html
        ROLE_ADMIN: [ROLE_EDITOR,ROLE_ALLOWED_TO_SWITCH]
